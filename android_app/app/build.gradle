apply plugin: 'com.android.application'

//Keystore properties
def keystorePropertiesFile = rootProject.file("../keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


android {
    signingConfigs {
        doordash_signing {
        }
    }
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.catlaz.doordash_lit_cl"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        //Testing
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        sourceSets.test.resources.srcDirs += ["src/test/test_resources"]
//        sourceSets {
//            main {
//                assets.srcDirs = ['src/main/assets']
//            }
//            test{
//                resources.srcDirs += ["src/test/test_resources"]
//
//            }
//        }

        //GOOGLE
        //Google API properties
        Properties apiProperties = new Properties()
        if (rootProject.file("../api.properties").exists()) {
            apiProperties.load(rootProject.file("../api.properties").newDataInputStream())
        }
        // Inject the Maps API key into the manifest
        manifestPlaceholders = [mapsApiKey: apiProperties.getProperty("MAPS_API_KEY", "")]


    }

    signingConfigs {
        release {
            storeFile rootProject.file('../keystore_ddlit.jks')
            storePassword keystoreProperties['KEYSTORE_PASSWORD']
            keyAlias keystoreProperties['KEY_ALIAS']
            keyPassword keystoreProperties['KEY_PASSWORD']
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }


    // Configure only for each module that uses Java 8
    // language features (either in its source code or
    // through dependencies).
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "Boolean", "DEBUG_MODE", "false"
        }
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            buildConfigField "Boolean", "DEBUG_MODE", "false"

        }

    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    //ViewPager
    //implementation "androidx.viewpager2:viewpager2:1.0.0" viewpager2
    implementation 'androidx.viewpager:viewpager:1.0.0'

    //Remote libraries: retrofit, rxjava
    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1' // enable logs
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.13'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.5.0'

    //Broadcast receivers
    implementation 'androidx.localbroadcastmanager:localbroadcastmanager:1.0.0'

    //Add animated gif
    implementation 'com.github.bumptech.glide:glide:3.7.0'

    //Google services
    //implementation 'com.google.android.gms:play-services-location:17.1.0' //Location and Activity Recognition
    implementation 'com.google.maps.android:maps-utils-ktx:2.2.0' //Maps


    //Testing
    testImplementation 'junit:junit:4.12'
    //noinspection GradleDependency
    androidTestImplementation("androidx.test:runner:1.2.0") // if updated to latest version, test crashes ?
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    //Espresso
    //noinspection GradleDependency
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0' //if updated to latest version, instrumented test crashes ?
    //noinspection GradleDependency
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0' //mock intents
    //noinspection GradleDependency
    androidTestImplementation 'androidx.test:runner:1.1.0'
    //noinspection GradleDependency
    androidTestImplementation 'androidx.test:rules:1.1.0'
    testImplementation 'org.mockito:mockito-core:2.7.22' //local test mock
    testImplementation 'org.robolectric:robolectric:4.4' //local tests
    //Fragments
    def fragment_version = "1.2.5"
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"

}